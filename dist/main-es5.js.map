{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/components/about-us/about-us.component.ts","webpack:///src/app/components/about-us/about-us.component.html","webpack:///src/app/components/basic-question/basic-question.component.ts","webpack:///src/app/components/basic-question/basic-question.component.html","webpack:///src/app/components/login-screen/login-screen.component.ts","webpack:///src/app/components/login-screen/login-screen.component.html","webpack:///src/app/components/new-quiz/new-quiz.component.ts","webpack:///src/app/components/new-quiz/new-quiz.component.html","webpack:///src/app/components/start-screen/start-screen.component.ts","webpack:///src/app/components/start-screen/start-screen.component.html","webpack:///src/app/service/api.service.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","routes","path","pathMatch","redirectTo","component","AppRoutingModule","forRoot","imports","AppComponent","title","selector","templateUrl","styleUrls","AppModule","declarations","providers","bootstrap","AboutUsComponent","BasicQuestionComponent","apiService","currentQuestionNum","newScore","getQuestionByNum","newScoreName","ourQuestion","score","push","updateQuestionByNum","num","subscribe","data","addScoreToQuestion","LoginScreenComponent","NewQuizComponent","StartScreenComponent","ApiService","http","baseUri","headers","set","get","url","pipe","res","errorMgmt","put","error","errorMessage","ErrorEvent","message","status","console","log","providedIn","environment","production","bootstrapModule","err"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { StartScreenComponent } from './components/start-screen/start-screen.component';\r\nimport { BasicQuestionComponent } from './components/basic-question/basic-question.component';\r\nimport { LoginScreenComponent } from './components/login-screen/login-screen.component';\r\nimport { NewQuizComponent } from './components/new-quiz/new-quiz.component';\r\nimport { AboutUsComponent } from './components/about-us/about-us.component';\r\n\r\nconst routes: Routes = [\r\n{ path: '', pathMatch: 'full', redirectTo: 'start-screen' },\r\n{ path: 'start-screen', component: StartScreenComponent },\r\n{ path: 'basic-question', component: BasicQuestionComponent },\r\n{ path: 'login-screen', component: LoginScreenComponent },\r\n{ path: 'new-quiz', component: NewQuizComponent },\r\n{ path: 'about-us', component: AboutUsComponent }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent {\r\n  title = 'question-app';\r\n}\r\n","<div class = \"topnav\">\r\n  <a routerLinkActive=\"active\" routerLink=\"/start-screen\"> Home Page </a>\r\n  <a routerLinkActive=\"active\" routerLink=\"/basic-question\"> Pet Quiz </a>\r\n  <a routerLinkActive=\"active\" routerLink=\"/login-screen\"> My Profile </a>\r\n  <a routerLinkActive=\"active\" routerLink=\"/new-quiz\"> Make Your Own </a>\r\n  <a routerLinkActive=\"active\" routerLink=\"/about-us\">About Us</a>\r\n</div>\r\n\r\n\r\n\r\n<router-outlet></router-outlet>","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { ApiService } from './service/api.service';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\n\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { BasicQuestionComponent } from './components/basic-question/basic-question.component';\r\nimport { StartScreenComponent } from './components/start-screen/start-screen.component';\r\nimport { LoginScreenComponent } from './components/login-screen/login-screen.component';\r\nimport { NewQuizComponent } from './components/new-quiz/new-quiz.component';\r\nimport { AboutUsComponent } from './components/about-us/about-us.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    BasicQuestionComponent,\r\n    StartScreenComponent,\r\n    LoginScreenComponent,\r\n    NewQuizComponent,\r\n    AboutUsComponent\r\n  ],\r\n\r\n  imports: [\r\n    BrowserModule,\r\n\tReactiveFormsModule,\r\n    AppRoutingModule,\r\n\tHttpClientModule\r\n  ],\r\n  \r\n  providers: [ApiService],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-about-us',\r\n  templateUrl: './about-us.component.html',\r\n  styleUrls: ['./about-us.component.css']\r\n})\r\nexport class AboutUsComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<body>\r\n<p>This is a basic web application which uses a pet quiz as an example, this is from https://itstillworks.com/what-kind-of-pet-is-right-for-you-13558224.html </p>\r\n</body>","import { Component, OnInit } from '@angular/core';\r\nimport { ApiService } from './../../service/api.service';\r\nimport { FormControl } from '@angular/forms';\r\n\r\n@Component({\r\n  selector: 'app-basic-question',\r\n  templateUrl: './basic-question.component.html',\r\n  styleUrls: ['./basic-question.component.css']\r\n})\r\n\r\n\r\nexport class BasicQuestionComponent implements OnInit {\r\n\r\n\tourQuestion;\r\n\tcurrentQuestionNum = \"1\";\r\n\tnewScore = new FormControl('');\r\n\r\n\t\r\n\t\r\n\tngOnInit(): void {\r\n\t}\r\n\r\n\tconstructor(private apiService: ApiService) {\r\n\t\tthis.getQuestionByNum(this.currentQuestionNum);\r\n\t }\r\n\r\n\r\n\t addScoreToQuestion(newScoreName){\r\n\t\t this.ourQuestion.score.push(newScoreName);\r\n\t\t this.apiService.updateQuestionByNum(this.ourQuestion.num, this.ourQuestion).subscribe((data) => { })}\r\n\t \r\n\r\n \r\n\tgetQuestionByNum(num){ \r\n\t\tthis.apiService.getQuestionByNum(num).subscribe((data) => {\r\n\t\tthis.ourQuestion = data[0];\r\n\t\tthis.currentQuestionNum = this.ourQuestion.num;\r\n\t\t//console.log(this.ourRoom);\r\n\t})\r\n\r\n  }\r\n\r\n}\r\n","<body>\r\n    <p>\"Which pet should you buy?\"</p>\r\n<h2>\r\n {{ourQuestion.question}}\r\n</h2>\r\n\r\n<div class = \"button\">\r\n    <button (click)=\"getQuestionByNum(ourQuestion.yes)\"> Yes</button>\r\n    <button (click)=\"getQuestionByNum(ourQuestion.no)\"> No</button>\r\n    <p>Once you receive your answer, click \"yes\" or \"no\" to start again</p>\r\n    <br>\r\n    <br>\r\n\r\n    \r\n</div>\r\n<br>\r\n\r\n\r\n<br>\r\n\r\n<h3> Score Board: </h3> <div *ngFor=\"let item of ourQuestion.score\"></div>\r\n\r\n\r\nadd your name to the board: <input type=\"text\" [formControl]=\"newScore\">\r\n<button (click)=\"addScoreToQuestion(newScore.value)\">Add</button>\r\n<br>\r\nWho else got this result:\r\n<li>{{ ourQuestion.score }}</li>\r\n\r\n\r\n</body>","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-login-screen',\r\n  templateUrl: './login-screen.component.html',\r\n  styleUrls: ['./login-screen.component.css']\r\n})\r\nexport class LoginScreenComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<head></head>\r\n\r\n<body>\r\n<h1>\r\n    <p>Please login</p>\r\n\r\n\r\n</h1>\r\n<label for=\"username\">Username:</label>\r\n<input type=\"text\" id=\"username\" name=\"username\"><br><br>\r\n\r\n<label for=\"Password\">Password:</label>\r\n<input type=\"text\" id=\"password\" name=\"password\"><br><br>\r\n    <button>login</button>\r\n</body>","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-new-quiz',\r\n  templateUrl: './new-quiz.component.html',\r\n  styleUrls: ['./new-quiz.component.css']\r\n})\r\nexport class NewQuizComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<body>\r\n    <h1>\r\n<p>Make your own quiz!</p>\r\n</h1>\r\n<label for=\"qname\">Quiz Name:</label>\r\n<input type=\"text\" id=\"qname\" name=\"qname\"><br><br>\r\n\r\n<label for=\"q1\">First Question:</label>\r\n<input type=\"text\" id=\"q1\" name=\"q1\">\r\n\r\n<label for=\"q1res\">Leads to:</label>\r\n<input type=\"text\" id=\"q1res\" name=\"q1res\"><br><br>\r\n\r\n<label for=\"q2\">Second Question:</label>\r\n<input type=\"text\" id=\"q2\" name=\"q2\">\r\n\r\n<label for=\"q2res\">Leads to:</label>\r\n<input type=\"text\" id=\"q2res\" name=\"q2res\"><br><br>\r\n\r\n<label for=\"q3\">Third Question:</label>\r\n<input type=\"text\" id=\"q3\" name=\"q3\">\r\n\r\n<label for=\"q3res\">Leads to:</label>\r\n<input type=\"text\" id=\"q3res\" name=\"q3res\"><br><br>\r\n\r\n<label for=\"q4\">Fourth Question:</label>\r\n<input type=\"text\" id=\"q4\" name=\"q4\">\r\n\r\n<label for=\"q4res\">Leads to:</label>\r\n<input type=\"text\" id=\"q4res\" name=\"q4res\"><br><br>\r\n\r\n<label for=\"q5\">Fifth Question:</label>\r\n<input type=\"text\" id=\"q5\" name=\"q5\">\r\n\r\n<label for=\"q5res\">Leads to:</label>\r\n<input type=\"text\" id=\"q5res\" name=\"q5res\"><br><br>\r\n\r\n(\"Leads to\" can be the next question or the result)\r\n\r\n<button>submit</button>\r\n</body>\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-start-screen',\r\n  templateUrl: './start-screen.component.html',\r\n  styleUrls: ['./start-screen.component.css']\r\n})\r\nexport class StartScreenComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","\r\n<head></head>\r\n\r\n<body>\r\n<h1>\r\n    <p>Welcome to this quiz website</p>\r\n</h1>\r\n<br>\r\n\r\n<p>This website will allow you to answer quizzes and create your own!</p>\r\n\r\n</body>","import { Injectable } from '@angular/core';\r\nimport { Observable, throwError } from 'rxjs';\r\nimport { catchError, map } from 'rxjs/operators';\r\nimport { HttpClient, HttpHeaders, HttpErrorResponse } from '@angular/common/http';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\n\r\nexport class ApiService {\r\n\tbaseUri:string = '/api';\r\n\theaders = new HttpHeaders().set('Content-Type', 'application/json');\r\n\r\n  \tconstructor(private http: HttpClient) { }\r\n  \r\n  // Get all questions\r\n  getQuestions() {\r\n\t  return this.http.get(`${this.baseUri}`);\r\n\t  }\r\n\t  \r\n\t//Get question\r\n\tgetQuestion(id): Observable<any> {\r\n\t\tlet url = `${this.baseUri}/read/${id}`;\r\n\t\treturn this.http.get(url, {headers: this.headers}).pipe(\r\n\t\tmap((res: Response) => {\r\n\t\t\treturn res || {}\r\n\t\t}),\r\n\t\tcatchError(this.errorMgmt)\r\n\t\t)\r\n\t\t}\r\n\t\t\r\n\t\tgetQuestionByNum(num): Observable<any> {\r\n\t\t\tlet url = `${this.baseUri}/num/${num}`;\r\n\t\t\treturn this.http.get(url, {headers: this.headers}).pipe(\r\n\t\t\tmap((res: Response) => {\r\n\t\t\t\treturn res || {}\r\n\t\t\t\t}),\r\n\t\t\t\tcatchError(this.errorMgmt)\r\n\t\t\t\t)\r\n\t\t\t\t}\r\n\t\t\r\n\t\t\r\n\t\t  // Update room\r\n  updateQuestion(id, data): Observable<any> {\r\n    let url = `${this.baseUri}/update/${id}`;\r\n    return this.http.put(url, data, { headers: this.headers }).pipe(\r\n      catchError(this.errorMgmt)\r\n    )\r\n  }\r\n\r\n  updateQuestionByNum(num, data): Observable<any> {\r\n    let url = `${this.baseUri}/updatebynum/${num}`;\r\n    return this.http.put(url, data, { headers: this.headers }).pipe(\r\n      catchError(this.errorMgmt)\r\n    )\r\n  }\r\n\t\t\t\r\n\t// Error handling\r\n\terrorMgmt(error: HttpErrorResponse) {\r\n\t\tlet errorMessage = '';\r\n\t\tif (error.error instanceof ErrorEvent) {\r\n\t\t\t// Get client-side error\r\n\t\t\terrorMessage = error.error.message;\r\n\t\t\t} else {\r\n\t\t\t\t// Get server-side error\r\n\t\t\t\terrorMessage = `Error Code: ${error.status}\\nMessage: ${error.message}`;\r\n\t\t\t\t}\r\n\t\t\t\tconsole.log(errorMessage);\r\n\t\t\t\treturn throwError(errorMessage);\r\n\t}\r\n\t\t\r\n\t\t\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n"]}